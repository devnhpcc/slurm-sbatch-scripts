#!/bin/bash
sname=`basename $0`
submit=1
GOPTS=""
nn=1
PART=amd128
SLTIME="##SBATCH --time="
SLARRY="##SBATCH --array="
Ver=14.2
#======================================================================
function Usage(){
        echo "Create and submit job for Mathematica"
        echo ""
        echo "Usage: ${sname} <INPUT> [OPTION]"
        echo "
        -n  <np>          Number of processors.
        -m  <mem>         Memory required for job (GB).
        -p  <part>        Partition name to submit the job. (use 'sinfo')
	-v  <ver>         Mathematica Version. Available: 12.3, 13.2, 14.2 Default: 14.2
	-a  <n1-n2>       Use this option for array job.
        -t  <time>        run time of the job. Valid format: M, H:M:S, D-H, D-H:M
        -so <sopt>        Additional slurm options if needed.
        -no               Only write job file.
        -h | --help       Print this message and exit."
        echo ""
        echo " Example:  $sname input.wls -n 8 -m 10 -t 2-0"
        echo ""
	exit
}
#======================================================================
[[ $# -eq 0 ]] && Usage
SOPT='n:m:p:v:ht:a:'
LOPT='no,so:,help'
OPTS=$(getopt -a -o ${SOPT} -l ${LOPT} -n ${sname} -- "$@")
[ $? -ne 0 ] && echo 'Terminating...' >&2 && exit 1
eval set -- "$OPTS"
unset OPTS
while true; do
	case "$1" in
		-n)
			np=$2
			shift		;;
		-m)
			mem=$2
			shift		;;
		-p)
			PART=$2
			shift		;;
		-t)
			SLTIME=${SLTIME:1}$2
			shift		;;
		-a)
			SLARRY=${SLARRY:1}$2
			SA=1
			shift 		;;
		-v)
			Ver=$2
			shift		;;
		--so)
			slurm_opt=$2
			shift		;;
		--no)
			submit=0	;;
		-h | --help)
			Usage ; exit	;;
		--)
			shift ; break	;;
		*)
			echo "$1: Wrong option!" >&2
			exit 1		;;
	esac
	shift
done
#echo 'Remaining arguments:'
for arg; do
	[[ -z $input ]] &&  input=$arg && continue
	echo "not defined argument --> '$arg'"
done
#======================================================================
if ! [ -e "$input" ]; then
  echo '-----------Error------------'
  echo "$input: file not found" >&2
  echo '----------------------------'
  exit 1
fi
#-----------------------------------
jobname=${input%.*}
jobname=${jobname~}
dos2unix -q $input 
#-----------------------------------
if [ "$mem" == "0" ]; then
  slcmd1="#SBATCH --exclusive"
else
  slcmd1="#SBATCH --mem=${mem}G"
fi
#-----------------------------------
#-----------------------------------
if [ ! -z $SA ]; then
   APPEND="--open-mode=append"
fi
#-----------------------------------
cat << END > $jobname.job
#!/bin/bash
#SBATCH -J $jobname
#SBATCH -o %x_%A.out $APPEND
#
$slcmd1
#
## number of nodes
#SBATCH -N 1
 
## number of tasks
#SBATCH -n 1

## number of cpus per task (OpenMP Threads)
#SBATCH --cpus-per-task=$np

## how long job takes, wallclock time d-hh:mm:ss
$SLTIME

## Submit a job array, multiple jobs to be executed with identical parameters.
$SLARRY

## name of queue or partition
#SBATCH --partition=$PART

ml purge
module load Mathematica/$Ver

# Run Mathematica
wolframscript -file $input
rm -f $jobname.job
END
[[ $submit -eq 1 ]] && sbatch $slurm_opt $jobname.job

